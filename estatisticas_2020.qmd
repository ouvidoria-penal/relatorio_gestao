# Parâmetros 2020 {#sec-dados-ouvidoria-2020}

```{r message=FALSE}
library(tidyverse)
library(knitr)
library(plotly)
library(kableExtra)
library(DT)
library(gganimate)
library(formattable)
library(abjutils)
library(janitor)

cores <- c("#294661","#7F312F","#808080","#B8860B","#5E3B56","#5F9EA0","#808000","#A0522D",
           "#F5DEB3","#FF9900","#8B008B","#5F6B6D","#FB8281","#F4D25A","#7F898A","#A4DDEE",
           "#FDAB89","#B687AC","#28738A","#A78F8F","#168980","darkred","#0000FF","#00FFFF",
           "#DAA520","#DEB887") #VETOR DE CORES PARA OS GRAFICOS


meses <- c("Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez")

vetor_filtro <- 2020

dados_gerais <- 
  readRDS(
    file = "../bases_tidy/rel1_dados_gerais.rds",
    #fileEncoding = "UTF-8"
  ) |> 
  filter(org_ano_inicio_tratamento == vetor_filtro)

tipos_demandas <-
  readRDS(
    file = "../bases_tidy/rel2_tipos_demandas.rds"
  )|> 
  filter(org_ano_inicio_tratamento == vetor_filtro)

encaminhamento_demandas <-
  readRDS(
    file = "../bases_tidy/rel13_encaminhamentos.rds"
  )|> 
  filter(org_ano_inicio_tratamento == vetor_filtro)

solicitacoes <- 
  readRDS(
    file = "../bases_tidy/rel3_solicitacoes.rds"
  ) |> 
  mutate(
    org_ano_inicio_tratamento = lubridate::year(org_data_inicio_tratamento)
  )|> 
  filter(org_ano_inicio_tratamento == vetor_filtro)

juridicas <- 
  readRDS(
    file = "../bases_tidy/rel3.1_assistencia_juridica.rds"
  ) |> 
  mutate(
    org_ano_inicio_tratamento = lubridate::year(org_data_inicio_tratamento)
  )|> 
  filter(org_ano_inicio_tratamento == vetor_filtro)

denuncias <- 
  readRDS(
    file = "../bases_tidy/rel4.1_denuncias_tipo.rds"
  ) |> 
  mutate(
    org_ano_inicio_tratamento = lubridate::year(org_data_inicio_tratamento)
  )|> 
  filter(org_ano_inicio_tratamento == vetor_filtro)

denuncias_denunciado <- 
  readRDS(
    file = "../bases_tidy/rel4.2_denuncias_denunciado.rds"
  ) |> 
  mutate(
    org_ano_inicio_tratamento = lubridate::year(org_data_inicio_tratamento)
  )|> 
  filter(org_ano_inicio_tratamento == vetor_filtro)

reclamacoes <- 
  readRDS(
    file = "../bases_tidy/rel5.1_reclamacoes_tipo.rds"
  ) |> 
  mutate(
    org_ano_inicio_tratamento = lubridate::year(org_data_inicio_tratamento)
  )|> 
  filter(org_ano_inicio_tratamento == vetor_filtro)

sugestoes <- 
  readRDS(
    file = "../bases_tidy/rel6.1_sugestoes_tipo.rds"
  ) |> 
  mutate(
    org_ano_inicio_tratamento = lubridate::year(org_data_inicio_tratamento)
  )|> 
  filter(org_ano_inicio_tratamento == vetor_filtro)

elogios <- 
  readRDS(
    file = "../bases_tidy/rel7.1_elogios_tipo.rds"
  ) |> 
  mutate(
    org_ano_inicio_tratamento = lubridate::year(org_data_inicio_tratamento)
  )|> 
  filter(org_ano_inicio_tratamento == vetor_filtro)

producao <- 
  readRDS(
      file = "../bases_tidy/rel8_index_producao.rds"
  )|> 
  filter(org_ano_inicio_tratamento == vetor_filtro)

```

Este capítulo traz as informações pormenorizadas acerca das solicitações, denúncias, reclamações, sugestões, elogios e/ou agradecimentos realizadas à Onasp no ano de `r vetor_filtro`.

O principal objetivo é quantificar o trabalho exercido pela Onasp. Especificamente, este capítulo visa gerar índices qualitativos / quantitativos para apoio a tomada de decisão dos gestores e supervisionar o andamento das atividades de ouvidoria em âmbito nacional.

São analisados - numericamente e graficamente - os seguintes aspectos: características dos processos recebidos ([seção @sec-caracteristicas-processos-2020]); demandas tipificadas como solicitações ([seção @sec-solicitacoes-2020]); denúncias ([seção @sec-denuncias-2020]); reclamações ([seção @sec-reclamacoes-2020]); sugestões ([seção @sec-sugestoes-2020]); e elogios ou agradecimentos ([seção @sec-elogios-2020]).

::: callout-important
## Importante!!!

*Todas as análises contidas neste relatório têm o início do tratamento da demanda como data de referência.*
:::

Por fim, durante todo o capítulo, são utilizados recursos gráficos e tabelas para melhor entendimento do comportamento das variáveis envolvidas no processo de análise.

## Características dos processos {#sec-caracteristicas-processos-2020}

```{r}
dados_gerais_aptidao <- 
  dados_gerais |>
  dplyr::select(
    org_ano_inicio_tratamento,
    dem001_demanda_apta,
    dem002_demanda_motivo_inaptidao
  ) |> 
  mutate(org_ano_inicio_tratamento = as.factor(org_ano_inicio_tratamento))

dados_gerais_aptidao1 <- 
  dados_gerais_aptidao |> 
  count(
    dem001_demanda_apta
  ) |> 
  mutate(
    total = sum(n, na.rm = TRUE),
    porcentagem = round((n / total)*100, digits = 2)  
  ) |>  
 arrange(desc(porcentagem))

dados_gerais_aptidao2 <- 
  dados_gerais_aptidao |> 
  filter(dem001_demanda_apta == "Não") |> 
   group_by(
   org_ano_inicio_tratamento,
   dem002_demanda_motivo_inaptidao
  ) |> 
  summarise(
    qtd = n()
  ) |> 
  pivot_wider(
    names_from = dem002_demanda_motivo_inaptidao,
    values_from = qtd
  )

dados_gerais_aptidao3 <- 
  dados_gerais_aptidao |> 
  filter(dem001_demanda_apta == "Não") |> 
   group_by(
   org_ano_inicio_tratamento,
   dem002_demanda_motivo_inaptidao
  ) |> 
  summarise(
    qtd = n()
  )|> 
  mutate(
    total = sum(qtd, na.rm = TRUE),
    porcentagem = round((qtd / total)*100, digits = 2),
    dem002_demanda_motivo_inaptidao = case_when(
      dem002_demanda_motivo_inaptidao == "Não compete à onsp" ~ "Não compete à Onasp",
      TRUE ~ dem002_demanda_motivo_inaptidao
    )
    
  ) |>  
 arrange(desc(porcentagem))
  

```

A partir de agora, inicia-se a análise dos processos recebidos e tratados pela Onasp caracterizando as demandas de acordo com o regimento interno da Senappen em: solicitações; denúncias; reclamações; sugestões; e elogios / agradecimentos.

Verifica-se a relevância numérica apoiada nos valores absolutos e relativos das ocorrências de cada tipo de demanda ([seção @sec-tipos-processos-2020]).

Necessário constar que as análises realizadas, a partir deste tópico, se referem às demandas consideradas aptas.

### Tipos de processos {#sec-tipos-processos-2020}

```{r}
dados_gerais_tipos_demandas <- 
  tipos_demandas|> 
  group_by(
    org_ano_inicio_tratamento,
    tipo_demanda
  ) |> 
  summarise(
    qtd = n()
  ) |> 
  ungroup() |> 
  group_by(
    org_ano_inicio_tratamento,
    ) |> 
  mutate(
    total = sum(qtd, na.rm = TRUE),
    porcentagem = round((qtd / total)*100, digits = 2)  
  ) |>  
  arrange(org_ano_inicio_tratamento, desc(porcentagem)) |> 
  mutate(
      tipo_demanda = factor(
      tipo_demanda, 
      levels = c("Solicitação","Denúncia","Reclamação","Sugestão","Elogio e/ou agradecimento"), 
      ordered = TRUE),
      org_ano_inicio_tratamento = as.factor(org_ano_inicio_tratamento)
  )

dados_gerais_tipos_demandas2 <-
  dados_gerais_tipos_demandas |> 
  select(org_ano_inicio_tratamento:qtd) |>
  filter(org_ano_inicio_tratamento == vetor_filtro) |> 
  pivot_wider(
    names_from = tipo_demanda,
    values_from = qtd
  )


```

A ano de `r vetor_filtro` trouxe `r max(dados_gerais_aptidao1$n)` processos com demandas aptas à encaminhamento. Nesse sentido, a tabela abaixo separa os processos de acordo com suas características (tipos) e mostra os quantitativos absolutos e relativos para cada ano e tipo de demanda. Consequentemente, a soma de todos os tipos de manifestações é superior à quantidade total de processos, pois, em um mesmo processo pode haver várias manifestações.

A tabela abaixo tipifica os processo e os separa de acordo com seu teor.

```{r}
#| label: tbl-demandas1-2020
#| tbl-cap: >
#|   Tipificação dos processos recebidos pela Ouvidoria Nacional dos Serviços Penais.
    

t3 <- dados_gerais_tipos_demandas |> 
  select(
    org_ano_inicio_tratamento, tipo_demanda, qtd,porcentagem 
  ) 
names(t3) <- c("Ano","Tipo de demanda","Quantidade","Qtd. relativa (%)")

formattable::formattable(
    t3, 
    align = c("c","l","l","l"),
    list(
    `Ano` = color_tile("lightgrey","orange"),
    `Tipo de demanda` = color_tile("lightblue","lightyellow"),
    
    area(col = c(`Quantidade`)) ~ normalize_bar("#F6FF98", 0.2),
    area(col = c(`Qtd. relativa (%)`)) ~ normalize_bar("lightblue", 0.2)
  )) |> 
  as.datatable(
    escape = FALSE,
    #options = list(scrollX = TRUE),
    rownames = FALSE,
    filter = "top",
    options = list(
    pageLength = 5, 
    autoWidth = TRUE,
    initComplete = JS(
    "function(settings, json) {",
    "$('body').css({'font-family': 'Calibri'});",
    "}"
    ),
    language = list(
      info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
      paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
      url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
    )
  #pageLength = 5
    )
  )
```

 

O gráfico na [figura @fig-tipo-demanda-2020] deixa clara a diferenciação quantitativa das características dos processos contendo solicitações. Sendo `r max(dados_gerais_tipos_demandas$qtd)` demandas tipificadas dessa maneira, ou seja, `r str_c(max(dados_gerais_tipos_demandas$porcentagem),"%")` são consideradas como **pedidos** de diversos modos.

```{r}
#| label: fig-tipo-demanda-2020
#| fig-cap: >  
#|       O gráfico de barras (esquerda) mostra, em valores absolutos, as quantidades de processos que contêm cada categoria parametrizada. O gráfico de setor (direita) evidencia a mesma informação em valores relativos.
#| fig-subcap:
#|     - "Valores Absolutos"
#|     - "Valores Relativos"
#| layout-ncol: 2

 
p3 <-dados_gerais_tipos_demandas2 |>
  plot_ly(
    x = ~ org_ano_inicio_tratamento,
    y = ~ `Solicitação`,
    name = "Solicitação",
    type = 'bar',
    text = ~ `Solicitação`,
    textposition = "auto",
    alpha = 0.7,
    marker = list(color = "#294661")
  )

p3 <- p3 |> 
  add_trace(
    y = ~`Denúncia`,
    name = "Denúncia",
    type = 'bar',
    text = ~`Denúncia`,
    textposition = "auto",
    alpha = 0.7,
    marker = list(color = "#7F312F")
  )

p3 <- p3 |> 
  add_trace(
    y = ~`Reclamação`,
    name = "Reclamação",
    type = 'bar',
    text = ~`Reclamação`,
    textposition = "auto",
    alpha = 0.7,
    marker = list(color = "#808080") 
  )

p3 <- p3 |> 
  add_trace(
    y = ~`Sugestão`,
    name = "Sugestão",
    type = 'bar',
    text = ~`Sugestão`,
    textposition = "auto",
    alpha = 0.7,
    marker = list(color =  "#B8860B") 
  )

p3 <- p3 |> 
  add_trace(
    y = ~`Elogio e/ou agradecimento`,
    name = "Elogio e/ou agradecimento",
    type = 'bar',
    text = ~`Elogio e/ou agradecimento`,
    textposition = "auto",
    alpha = 0.7,
    marker = list(color = "#5E3B56") 
  )



p3 <- p3 |> layout(
  #title = "Tempos médios / 2021",
  uniformtext=list(minsize=8, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14),
  xaxis = list(title = ""),
  yaxis = list(title = "Quantidade de Manifestações"),
  legend = list(orientation = "v")
)

p3

p3_relativo <- dados_gerais_tipos_demandas |>
  plot_ly(
    labels = ~ tipo_demanda,
    values = ~ porcentagem,
    type = 'pie',
    hole = 0.6,
    textinfo = "percent", #label+percent,
    hoverinfo = 'text+percent',
    text = ~ tipo_demanda,
    textposition = "auto",
    alpha = 0.7,
    marker = list(colors = cores,
                  line = list(color = '#FFFFFF', width = 1) #LINHA DE SEPARACAO DOS SETORES
              ),
    showlegend = TRUE
  )

p3_relativo <-p3_relativo |> layout(
  #title = "Tempos médios / 2021",
  uniformtext=list(minsize=8, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14),
  #xaxis = list(title = ""),
  #yaxis = list(title = "Quantidade de Manifestações"),
  legend = list(orientation = "v")
)

p3_relativo
```

## Solicitações {#sec-solicitacoes-2020}

Este tópico trata das demandas tipificadas como **solicitações**. Sendo assim, visa quantificar e mensurar a importância desse tipo de manifestação.

Na [seção @sec-tipos-solicitacoes-2020] lista-se o rol de solicitações de acordo com a característica do pedido.

### Tipos de solicitações {#sec-tipos-solicitacoes-2020}

```{r}
solicitacoes1 <- 
  solicitacoes |> 
  count(
    org_ano_inicio_tratamento,
    tipo_solicitacao,
    name = "qtd"
  ) |> 
  group_by(
    org_ano_inicio_tratamento
  ) |> 
  mutate(
    total = sum(qtd, na.rm = TRUE),
    porcentagem = round((qtd/total)*100, digits = 2)
  ) |> 
  arrange(org_ano_inicio_tratamento, desc(qtd)) |> 
  mutate(
    tipo_solicitacao = factor(tipo_solicitacao, levels = tipo_solicitacao,ordered = TRUE)
  )

solicitacoes3 <- 
  solicitacoes1 |> 
  arrange(desc(qtd)) |> 
  head(7)
  
```

Conforme já citado na [seção @sec-tipos-processos-2020], as solicitações representam `r str_c(max(dados_gerais_tipos_demandas$porcentagem),"%")` do total de demandas recebidas pela Onasp.

A próxima tabela lista as quantidades de solicitações separadas por seus respectivos motivos.

```{r}
#| label: tbl-tipos-solicitacoes-2020
#| tbl-cap: >
#|   Lista de solicitações com valores absolutos e seus respectivos percentuais a cada ano.

t1_solicitacoes <- solicitacoes1 |> select(org_ano_inicio_tratamento,tipo_solicitacao,qtd,porcentagem)
names(t1_solicitacoes) <- c("Ano","Tipo de Solicitação","Quantidade","Valor relativo (%)")

formattable::formattable(
    t1_solicitacoes, 
    align = c("c","l","l","l"),
    list(
    `Ano` = color_tile("lightgrey","orange"),
    `Tipo de Solicitação` = color_tile("lightblue","lightyellow"),
    area(col = c(`Quantidade`)) ~ normalize_bar("#F6FF98", 0.2),
    area(col = c(`Valor relativo (%)`)) ~ normalize_bar("lightblue", 0.2)
  )) |> 
  as.datatable(
    escape = FALSE,
    #options = list(scrollX = TRUE),
    rownames = FALSE,
    filter = "top",
    options = list(
    pageLength = 5, 
    autoWidth = TRUE,
    initComplete = JS(
    "function(settings, json) {",
    "$('body').css({'font-family': 'Calibri'});",
    "}"
    ),
    language = list(
    info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
    paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
    url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
   )
  #pageLength = 5
    )
  ) 
```

 

O quadro na [figura @fig-graf-tipos-solicitacoes-2020] mostra os `r nrow(solicitacoes3)` tipos mais recorrentes de solicitações. Nota-se a discrepância percentual das solicitações de **Assistência Jurídica** com `r str_c(max(solicitacoes3$porcentagem),"%")` de incidência.

```{r}
#| label: fig-graf-tipos-solicitacoes-2020
#| fig-cap: >  
#|       Tipificação das solicitações em seus valores absolutos e percentuais.


p4 <- solicitacoes3 |> 
  plot_ly(
    x = ~ tipo_solicitacao,
    y = ~ `qtd`,
    type = 'bar',
    color = ~ tipo_solicitacao,
    colors =  cores,
    text = ~ str_c( `qtd`,"/ ",porcentagem,"%"),
    textposition = "outside",
    textfont = list(family = "Calibri",size = 14),
    alpha = 0.9,
    #marker = list(color = cores),
    showlegend = FALSE
  )

p4 <- p4 |> layout(
  #title = "Tempos médios / 2021",
  #uniformtext=list(minsize=10, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14),
  xaxis = list(title = "",showline = FALSE, showticklabels = TRUE),
  yaxis = list(title = "Quantidade / Porcentagem",range = c(0.0,max(solicitacoes3$qtd)*1.12))
  #legend = list(orientation = "h")
)

p4
```

## Denúncias {#sec-denuncias-2020}

As denúncias recebidas são tratadas e acompanhadas de forma especial pelo teor de seus relatos. Os tipos de denúncias são voltadas, especialmente, à percepção de **maus tratos, torturas, ameaças**, **abuso de poder e corrupção por parte de autoridades**, **condições insalubres de permanência no estabelecimento prisional**, **privação de direitos**, entre outros.

Esta seção traz um resumo numérico do comportamento dos tipos de denúncia ([seção @sec-tipos-denuncias-2020]) e o perfil do cargo ocupado pelo denunciado ([seção @sec-denuncias-denunciado-2020]).

### Tipos de Denúncias {#sec-tipos-denuncias-2020}

```{r}
denuncias1 <- 
  denuncias |> 
  count(
    org_ano_inicio_tratamento,
    tipo_denuncia,
    name = "qtd"
  ) |> 
  group_by(
    org_ano_inicio_tratamento
  ) |> 
  mutate(
    total = sum(qtd, na.rm = TRUE),
    porcentagem = round((qtd/total)*100, digits = 2)
  ) |> 
  arrange(desc(qtd)) |>
  mutate(
    tipo_denuncia = factor(tipo_denuncia, levels =tipo_denuncia, ordered = TRUE)
  )

```

O ano de `r vetor_filtro` teve `r sum(denuncias1$qtd)` denúncias realizadas pelos próprios custodiados, amigos, advogados e/ou familiares. O próximo quadro tabula o rol de denúncias e a importância numérica de cada item.

```{r}
#| label: tbl-tipos-denuncias-2020
#| tbl-cap: >
#|   Denúncias tipificadas e seus valores absolutos e relativos.

t1_denuncias <- denuncias1 |> select(org_ano_inicio_tratamento,tipo_denuncia,qtd,porcentagem)
names(t1_denuncias) <- c("Ano","Tipo","Quantidade","Valor relativo (%)")

formattable::formattable(
    t1_denuncias, 
    align = c("c","l","l","l"),
    list(
    `Ano` = color_tile("lightgrey","orange"),
    `Tipo` = color_tile("lightblue","lightyellow"),
    area(col = c(`Quantidade`)) ~ normalize_bar("#F6FF98", 0.2),
    area(col = c(`Valor relativo (%)`)) ~ normalize_bar("lightblue", 0.2)
  )) |> 
  as.datatable(
    escape = FALSE,
    #options = list(scrollX = TRUE),
    rownames = FALSE,
    filter = "top",
    options = list(
    pageLength = 5, 
    autoWidth = TRUE,
    initComplete = JS(
    "function(settings, json) {",
    "$('body').css({'font-family': 'Calibri'});",
    "}"
    ),
    language = list(
    info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
    paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
    url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
   )
  #pageLength = 5
    )
  ) 
```

 

O gráfico na [figura @fig-graf-tipos-denuncias-2020] mostra os `r nrow(head(denuncias1,n=10))` tipos de denúncias mais recorrentes. Nota-se que, relatos de **maus tratos, torturas e ameaças** são comuns relativizando `r str_c(denuncias1$porcentagem[1],"%")` dos casos.

```{r}
#| label: fig-graf-tipos-denuncias-2020
#| fig-cap: >  
#|       Tipificação das denúncias apresentadas em seus valores absolutos e percentuais.


p6 <- denuncias1 |> 
  head(10) |> 
  plot_ly(
    x = ~ tipo_denuncia,
    y = ~ `qtd`,
    type = 'bar',
    color = ~ tipo_denuncia,
    colors =  cores,
    text = ~ str_c( `qtd`,"/ ",porcentagem,"%"),
    textposition = "outside",
    textfont = list(family = "Calibri",size = 14),
    alpha = 0.9,
    #marker = list(color = cores),
    showlegend = FALSE
  )

p6 <- p6 |> layout(
  #title = "Tempos médios / 2021",
  #uniformtext=list(minsize=10, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14),
  xaxis = list(title = "",showline = FALSE, showticklabels = TRUE),
  yaxis = list(title = "Quantidade / Porcentagem",range = c(0.0,max(denuncias1$qtd)*1.12))
  #legend = list(orientation = "h")
)
p6
```

### Denúncias - Perfil dos denunciados {#sec-denuncias-denunciado-2020}

```{r}
denunciado1 <- 
  denuncias_denunciado |> 
  filter(denunciado != "Dados nao coletados") |> 
  group_by(org_ano_inicio_tratamento, denunciado) |> 
  summarise(
    qtd = n()
  ) |> 
  ungroup() |> 
  mutate(
    soma = sum(qtd,na.rm = TRUE),
    porcentagem = round((qtd/soma)*100,digits = 2)
  ) |>  
  arrange(desc(porcentagem)) |> 
  mutate(
    denunciado = factor( denunciado, levels= denunciado, ordered = TRUE)
  ) |> 
  select(-soma)
```

Outra informação importante diz respeito ao alvo da denúncia. Nesse sentido, as próxima tabela mostra os cargos e instituições frequentemente denunciadas [^estatisticas_2020-1].

[^estatisticas_2020-1]: A coleta de dados sobre o perfil do denunciado teve início em meados de 2020.

```{r}
#| label: tbl-denuncias-denunciados-2020
#| tbl-cap: >
#|   Lista de cargos dos principais denunciados no Sistema Prisional.
    

t1_denunciados_denuncias <- denunciado1
names(t1_denunciados_denuncias) <- c("Ano","Denunciado","Quantidade","Qtd. relativa (%)")

formattable::formattable(
    t1_denunciados_denuncias, 
    align = c("c","l","l","l"),
    list(
    `Ano` = color_tile("lightgrey","orange"),
    `Denunciado` = color_tile("lightblue","lightyellow"),
    
    area(col = c(`Quantidade`)) ~ normalize_bar("#F6FF98", 0.2),
    area(col = c(`Qtd. relativa (%)`)) ~ normalize_bar("lightblue", 0.2)
  )) |> 
  as.datatable(
    escape = FALSE,
    #options = list(scrollX = TRUE),
    rownames = FALSE,
    filter = "top",
    options = list(
    pageLength = 5, 
    autoWidth = TRUE,
    initComplete = JS(
    "function(settings, json) {",
    "$('body').css({'font-family': 'Calibri'});",
    "}"
    ),
    language = list(
      info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
      paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
      url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
    )
  #pageLength = 5
    )
  )
```

 

Já a [figura @fig-graf-denunciados-2020] evidencia graficamente as informações da última tabela.

```{r}
#| label: fig-graf-denunciados-2020
#| fig-cap: >  
#|       Relação de cargos mais denunciados e seus quantificações. 

p10 <- denunciado1 |> 
 plot_ly(
    x = ~ denunciado,
    y = ~ `qtd`,
    type = 'bar',
    color = ~ denunciado,
    colors =  cores,
    text = ~ str_c( `qtd`,"/ ",porcentagem,"%"),
    textposition = "outside",
    textfont = list(family = "Calibri",size = 14),
    alpha = 0.9,
    #marker = list(color = cores),
    showlegend = FALSE
  )

p10 <- p10 |> layout(
  #title = "Tempos médios / 2021",
  #uniformtext=list(minsize=10, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14),
  xaxis = list(title = "",showline = FALSE, showticklabels = TRUE),
  yaxis = list(title = "Quantidade / Porcentagem",range = c(0.0,max(denunciado1$qtd)*1.12))
  #legend = list(orientation = "h")
)

p10
```

## Reclamações {#sec-reclamacoes-2020}

As reclamações surgem como um dos tipos mais frequentes de demandas recebidas pela Onasp. Nesse sentido, esta seção empenha-se em quantificar os dados de forma tabular e gráfica.

Na [seção @sec-tipos-reclamacoes-2020] tem-se a lista de características das reclamações.

### Tipos de reclamações {#sec-tipos-reclamacoes-2020}

```{r}
reclamacoes1 <- 
  reclamacoes |> 
  count(
    org_ano_inicio_tratamento,
    tipo_reclamacao,
    name = "qtd"
  ) |> 
  group_by(
    org_ano_inicio_tratamento
  ) |> 
  mutate(
    total = sum(qtd, na.rm = TRUE),
    porcentagem = round((qtd/total)*100, digits = 2)
  ) |> 
  arrange(desc(qtd)) |>
  mutate(
    tipo_reclamacao = factor(tipo_reclamacao, levels = tipo_reclamacao, ordered = TRUE)
  )

```

O ano de `r vetor_filtro` teve `r sum(reclamacoes1$qtd)` reclamações realizadas pelos próprios custodiados, amigos, advogados e/ou familiares. O próximo quadro tabula o rol de reclamações e a importância numérica de cada item.

```{r}
#| label: tbl-tipos-reclamacoes-2020
#| tbl-cap: >
#|   Reclamações tipificadas e seus valores absolutos e relativos.

t1_reclamacoes <- reclamacoes1 |> select(org_ano_inicio_tratamento,tipo_reclamacao,qtd,porcentagem)
names(t1_reclamacoes) <- c("Ano","Tipo","Quantidade","Valor relativo (%)")

formattable::formattable(
    t1_reclamacoes, 
    align = c("c","l","l","l"),
    list(
    `Ano` = color_tile("lightgrey","orange"),
    `Tipo` = color_tile("lightblue","lightyellow"),
    area(col = c(`Quantidade`)) ~ normalize_bar("#F6FF98", 0.2),
    area(col = c(`Valor relativo (%)`)) ~ normalize_bar("lightblue", 0.2)
  )) |> 
  as.datatable(
    escape = FALSE,
    #options = list(scrollX = TRUE),
    rownames = FALSE,
    filter = "top",
    options = list(
    pageLength = 5, 
    autoWidth = TRUE,
    initComplete = JS(
    "function(settings, json) {",
    "$('body').css({'font-family': 'Calibri'});",
    "}"
    ),
    language = list(
    info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
    paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
    url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
   )
  #pageLength = 5
  )
)
```

 

O gráfico na [figura @fig-graf-tipos-reclamacoes-2020] mostra os `r nrow(head(reclamacoes1,n=10))` tipos de reclamações mais recorrentes.

```{r}
#| label: fig-graf-tipos-reclamacoes-2020
#| fig-cap: >  
#|       Tipificação das reclamacoes apresentadas em seus valores absolutos e percentuais.


p11 <- reclamacoes1 |> 
  head(10) |> 
  plot_ly(
    x = ~ tipo_reclamacao,
    y = ~ `qtd`,
    type = 'bar',
    color = ~ tipo_reclamacao,
    colors =  cores,
    text = ~ str_c( `qtd`,"/ ",porcentagem,"%"),
    textposition = "outside",
    textfont = list(family = "Calibri",size = 14),
    alpha = 0.9,
    #marker = list(color = cores),
    showlegend = FALSE
  )

p11 <- p11 |> layout(
  #title = "Tempos médios / 2021",
  #uniformtext=list(minsize=10, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14),
  xaxis = list(title = "",showline = FALSE, showticklabels = TRUE),
  yaxis = list(title = "Quantidade / Porcentagem",range = c(0.0,max(reclamacoes1$qtd)*1.12))
  #legend = list(orientation = "h")
)
p11
```

## Sugestões {#sec-sugestoes-2020}

As sugestões podem ser realizadas para todos os órgãos da administração penitenciária em todas as esferas de poder. Dessa forma, a Ouvidoria Nacional dos Serviços Penais trata e encaminha esse tipo de manifestação conforme descrito na próxima seção ([seção @sec-tipos-sugestoes-2020]).

```{r}
sugestoes1 <- 
  sugestoes |> 
  count(
    org_ano_inicio_tratamento,
    tipo_sugestao,
    name = "qtd"
  ) |> 
  group_by(
    org_ano_inicio_tratamento
  ) |> 
  mutate(
    total = sum(qtd, na.rm = TRUE),
    porcentagem = round((qtd/total)*100, digits = 2)
  ) |> 
  arrange(desc(qtd)) |>
  mutate(
    tipo_sugestao = factor(tipo_sugestao, levels = tipo_sugestao, ordered = TRUE)
  )

```

### Tipos de Sugestões {#sec-tipos-sugestoes-2020}

A metodologia de coleta de dados da Onasp inclui a divisão dos assuntos sugeridos em categorias bem definidas de acordo com a tabela abaixo [^estatisticas_2020-2].

[^estatisticas_2020-2]: A estruturação da coleta de dados sobre sugestões iniciou-se no término de 2020.

```{r}
#| label: tbl-tipos-sugestoes-2020
#| tbl-cap: >
#|   Sugestões tipificadas e seus valores absolutos e relativos.

t1_sugestoes <- sugestoes1 |> select(org_ano_inicio_tratamento,tipo_sugestao,qtd,porcentagem)
names(t1_sugestoes) <- c("Ano","Tipo","Quantidade","Valor relativo (%)")

formattable::formattable(
    t1_sugestoes, 
    align = c("c","l","l","l"),
    list(
    `Ano` = color_tile("lightgrey","orange"),
    `Tipo` = color_tile("lightblue","lightyellow"),
    area(col = c(`Quantidade`)) ~ normalize_bar("#F6FF98", 0.2),
    area(col = c(`Valor relativo (%)`)) ~ normalize_bar("lightblue", 0.2)
  )) |> 
  as.datatable(
    escape = FALSE,
    #options = list(scrollX = TRUE),
    rownames = FALSE,
    filter = "top",
    options = list(
    pageLength = 5, 
    autoWidth = TRUE,
    initComplete = JS(
    "function(settings, json) {",
    "$('body').css({'font-family': 'Calibri'});",
    "}"
    ),
    language = list(
    info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
    paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
    url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
   )
  #pageLength = 5
  )
)
```

 

O gráfico na [figura @fig-graf-tipos-reclamacoes-2020] mostra os `r nrow(sugestoes1)` tipos de reclamações mais recorrentes.

```{r}
#| label: fig-graf-tipos-sugestoes-2020
#| fig-cap: >  
#|       Tipificação das sugestões apresentadas em seus valores absolutos e percentuais.


p12 <- sugestoes1 |> 
  head(10) |> 
  plot_ly(
    x = ~ tipo_sugestao,
    y = ~ `qtd`,
    type = 'bar',
    color = ~ tipo_sugestao,
    colors =  cores,
    text = ~ str_c( `qtd`,"/ ",porcentagem,"%"),
    textposition = "outside",
    textfont = list(family = "Calibri",size = 14),
    alpha = 0.9,
    #marker = list(color = cores),
    showlegend = FALSE
  )

p12 <- p12 |> layout(
  #title = "Tempos médios / 2021",
  #uniformtext=list(minsize=10, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14),
  xaxis = list(title = "",showline = FALSE, showticklabels = TRUE),
  yaxis = list(title = "Quantidade / Porcentagem",range = c(0.0,max(sugestoes1$qtd)*1.12))
  #legend = list(orientation = "h")
)
p12
```

## Elogios ou agradecimentos {#sec-elogios-2020}

```{r}
elogios1 <- 
  elogios |> 
  count(
    org_ano_inicio_tratamento,
    tipo_elogio,
    name = "qtd"
  ) |> 
  group_by(
    org_ano_inicio_tratamento
  ) |> 
  mutate(
    total = sum(qtd, na.rm = TRUE),
    porcentagem = round((qtd/total)*100, digits = 2)
  ) |> 
  arrange(desc(qtd)) |>
  mutate(
    tipo_elogio = factor(tipo_elogio, levels = tipo_elogio, ordered = TRUE)
  )

```

Esta seção trata dos elogios acerca de projetos e procedimentos dentro do sistema, além de agradecimentos sobre procedimentos realizados por pessoas ou órgãos no sistema penitenciário nacional.

A [seção @sec-tipos-elogios-2020] quantifica os assuntos elogiados / agradecidos [^estatisticas_2020-3] .

[^estatisticas_2020-3]: A coleta de dados nesse quesito foi estruturada a partir do fim de 2020.

### Tipos de elogios ou agradecimentos {#sec-tipos-elogios-2020}

A metodologia de coleta de dados da Onasp inclui a divisão dos elogios e agradecimentos em categorias bem definidas de acordo com a tabela abaixo.

```{r}
#| label: tbl-tipos-elogios-2020
#| tbl-cap: >
#|   Elogios e agradecimentos tipificados e seus valores absolutos e relativos.

t1_elogios <-elogios1 |> select(org_ano_inicio_tratamento,tipo_elogio,qtd,porcentagem)
names(t1_elogios) <- c("Ano","Tipo","Quantidade","Valor relativo (%)")

formattable::formattable(
   t1_elogios, 
    align = c("c","l","l","l"),
    list(
    `Ano` = color_tile("lightgrey","orange"),
    `Tipo` = color_tile("lightblue","lightyellow"),
    area(col = c(`Quantidade`)) ~ normalize_bar("#F6FF98", 0.2),
    area(col = c(`Valor relativo (%)`)) ~ normalize_bar("lightblue", 0.2)
  )) |> 
  as.datatable(
    escape = FALSE,
    #options = list(scrollX = TRUE),
    rownames = FALSE,
    filter = "top",
    options = list(
    pageLength = 5, 
    autoWidth = TRUE,
    initComplete = JS(
    "function(settings, json) {",
    "$('body').css({'font-family': 'Calibri'});",
    "}"
    ),
    language = list(
    info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
    paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
    url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
   )
  #pageLength = 5
  )
)
```

 

O gráfico na [figura @fig-graf-tipos-elogios-2020] mostra os `r nrow(elogios1)` tipos de elogios / agradecimentos mais recorrentes.

```{r}
#| label: fig-graf-tipos-elogios-2020
#| fig-cap: >  
#|       Tipificação dos elogios e agradecimentos apresentados em seus valores absolutos e percentuais.


p14 <- elogios1 |> 
  head(10) |> 
  plot_ly(
    x = ~ tipo_elogio,
    y = ~ `qtd`,
    type = 'bar',
    color = ~ tipo_elogio,
    colors =  cores,
    text = ~ str_c( `qtd`,"/ ",porcentagem,"%"),
    textposition = "outside",
    textfont = list(family = "Calibri",size = 14),
    alpha = 0.9,
    #marker = list(color = cores),
    showlegend = FALSE
  )

p14 <- p14 |> layout(
  #title = "Tempos médios / 2021",
  #uniformtext=list(minsize=10, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14),
  xaxis = list(title = "",showline = FALSE, showticklabels = TRUE),
  yaxis = list(title = "Quantidade / Porcentagem",range = c(0.0,max(elogios1$qtd)*1.12))
  #legend = list(orientation = "h")
)
p14
```
